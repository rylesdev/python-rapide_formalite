def extract_email_info(email_obj):
    """
    Extrait les informations principales d'un email.
    email_obj doit √™tre un dictionnaire contenant les champs suivants :
    - from
    - subject
    - date
    - body
    """
    # Cat√©gorisation des emails bas√©s sur des crit√®res sp√©cifiques
    category = "Nouveaux Emails"  # Valeur par d√©faut

    if "Urgent" in email_obj.get("subject", ""):
        category = "Priorit√© Haute"
    elif "Spam" in email_obj.get("subject", ""):
        category = "Spam"
    elif "Personnel" in email_obj.get("subject", ""):
        category = "Emails Personnels"
    elif "Professionnel" in email_obj.get("subject", ""):
        category = "Emails Professionnels"

    # Retourner les informations extraites de l'email, avec la cat√©gorie ajout√©e
    return {
        "Exp√©diteur": email_obj.get("from", "Inconnu"),
        "Objet": email_obj.get("subject", "Sans objet"),
        "Date": email_obj.get("date", "Date inconnue"),
        "Aper√ßu": email_obj.get("body", "")[:100] + "...",  # Les 100 premiers caract√®res
        "Cat√©gorie": category  # Ajout de la cat√©gorie
    }


def print_email_info(email_info):
    """
    Affiche joliment les informations d‚Äôun mail pour debug ou affichage.
    """
    print("üìß Email re√ßu :")
    print(f"  Exp√©diteur : {email_info['Exp√©diteur']}")
    print(f"  Objet      : {email_info['Objet']}")
    print(f"  Date       : {email_info['Date']}")
    print(f"  Aper√ßu     : {email_info['Aper√ßu']}")
    print(f"  Cat√©gorie  : {email_info['Cat√©gorie']}")  # Affiche la cat√©gorie de l'email
    print("-" * 50)
